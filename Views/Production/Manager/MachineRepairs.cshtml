@model panasonic_machine_checker.Models.MachineRepairsModel;
@{
    Layout = "~/Views/Shared/_App_Layout.cshtml";
    var userList = ViewBag.UserList as List<Users>;
    var statusList = ViewBag.StatusList as List<StatusMachineRepairs>;
    var scheduledList = ViewBag.CaseList as List<RepairSchedules>;
}

<div class="w-full bg-base-100 p-6 rounded-xl mt-5">
    <input type="checkbox" id="delete_modal" class="modal-toggle" />
    <div class="modal" role="dialog">
        <div class="modal-box">
            <h3 class="font-bold text-lg">Delete Machine Repairs Schedule ?</h3>
            <p class="text-sm">The Schedule data will be deleted permanently</p>
            <div class="modal-action">
                <label for="delete_modal" class="btn">Cancel</label>
                <button id="deleteBtn" class="btn btn-error text-white">Delete</button>
            </div>
        </div>
    </div>

    <div>
        <div class="flex items-center justify-between w-full mb-3">
            <h1 class="font-semibold">Machine Repairs <span class="badge badge-primary">@Model.MachineRepairsList.Count</span></h1>
            <div>
                <select class="select w-24 select-sm select-bordered" id="sort-filter">
                    <option disabled selected>Terbaru</option>
                    <option>Terlama</option>
                </select>
            </div>
        </div>
        <div class="overflow-x-auto">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th></th>
                        <th>Machine - Case - Reported by</th>
                        <th>Reviewed By</th>
                        <th>Repaired At</th>
                        <th>Status</th>
                        <th>Corrections</th>
                        <th>Result</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.MachineRepairsList.Count > 0)
                    {
                        int counter = 1;
                        @foreach (var item in Model.MachineRepairsList)
                        {
                            <tr id="item-@item.Id">
                                <th class="item_counter">@counter</th>
                                <td class="item_scheduled_case">@item.ScheduledBy.Case.Machine.Name - @item.ScheduledBy.Case.Machine.MachineLiniId.Name - @item.ScheduledBy.Case.ReportedByNavigation.Name</td>
                                <td class="item_scheduled_id hidden">@item.ScheduledById</td>
                                <td class="item_status_id hidden">@item.StatusId</td>
                                <td class="item_reviewed_by">@item.ReviewsBy.Name</td>
                                <td class="item_reviewed_by_id hidden">@item.ReviewedById</td>
                                <td class="item_repairdate">@item.RepairDate</td>
                                <td class="item_status">@item.Status.Name</td>
                                <td class="item_corrections">
                                    @if (item.Corrections == "" || item.Corrections == null)
                                    {
                                        <span class="badge bg-base-300 text-sm">None</span>
                                    }
                                    else
                                    {
                                        @item.Corrections;
                                    }
                                </td>
                                <td class="item_result">
                                    @if(item.Result == "" || item.Result == null)
                                    {
                                        <span class="badge bg-base-300 text-sm">None</span>
                                    }
                                    else
                                    {
                                        @item.Result;
                                    }
                                </td>
                            </tr>
                            counter++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">
                                <div class="w-full bg-error text-white p-3 rounded-xl text-center">
                                    Machine Repair Data Not Found
                                </div>
                            </td>
                        </tr>
                    }
                <tfoot>
                    <tr>
                        <th></th>
                        <th>Scheduled</th>
                        <th>Reviewed By</th>
                        <th>Repaired At</th>
                        <th>Status</th>
                        <th>Corrections</th>
                        <th>Result</th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="w-full flex mt-10 justify-end">
            <div class="join">
                <button class="btn join-item"><</button>
                <button class="btn btn-primary join-item">1</button>
                <button class="btn join-item">></button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let data = null
        let user_id = 0;

        let checkToken = sessionStorage.getItem('authToken')
        if (checkToken != null && checkToken != undefined) {
            let separator = checkToken.split('-')
            let role = separator.pop()
            let suffix = checkToken.split('-')[1]
            let user_id_selection = checkToken.slice(5, checkToken.indexOf('-'))
            user_id = parseInt(checkToken.split("-")[1])

            fetchUser(user_id, role)
        } else window.location.href = "/Login"

        function fetchUser(user_id, role) {
            fetch("/Admin/UserData/" + user_id, {
                method: "GET",
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then((response) => {
                    return response.json()
                })
                .then((data) => {
                    console.log(data.data)
                    document.getElementById('reviewed_by').value = data.data.name
                    document.getElementById('reviewed_by_id').value = data.data.id
                })
        }

        document.getElementById('sort-filter').addEventListener('change', (event) => {
            window.location.href = '?page=1&sortOrder=' + event.target.value;
        })
    </script>
}