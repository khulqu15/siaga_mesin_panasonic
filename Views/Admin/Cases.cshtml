@model panasonic_machine_checker.Models.CasesModel;
@{
    Layout = "~/Views/Shared/_App_Layout.cshtml";
    var machineList = ViewBag.MachineList as List<Machines>;
    var userList = ViewBag.UserList as List<Users>;
    var statusList = ViewBag.StatusList as List<StatusCases>;
}

<div class="w-full bg-base-100 p-6 rounded-xl mt-5">
    <input type="checkbox" id="form_modal" class="modal-toggle" />
    <div class="modal" role="dialog">
        <div class="modal-box max-w-xl">
            <h3 class="font-bold text-lg">Case's Form</h3>
            <form id="formData">
                <div class="form-control my-3">
                    <label for="machine_id">Select Machine</label>
                    <select required class="select select-bordered w-full mt-1" id="machine_id" name="machine_id">
                        <option value="" disabled selected>Select Machine</option>
                        @foreach (var machine in machineList)
                        {
                            <option value="@machine.Id">@machine.Name</option>
                        }
                    </select>
                </div>
                <div class="form-control my-3">
                    <label for="reported_by">Reported By</label>
                    <select required class="select select-bordered w-full text-black mt-1" id="reported_by" name="reported_by">
                        <option value="" disabled selected>Select User</option>
                        @foreach (var user in userList)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    </select>
                </div>
                <div class="form-control my-3">
                    <label for="status">Current Status</label>
                    <select required class="select select-bordered w-full mt-1" id="status" name="status">
                        <option value="" disabled selected>Select Status</option>
                        @foreach (var status in statusList)
                        {
                            <option value="@status.Id">@status.Name</option>
                        }
                    </select>
                </div>
                <div class="form-control my-3">
                    <label for="reported_at">Reported At</label>
                    <input type="date" class="input input-bordered w-full" id="reported_at" name="reported_at" />
                </div>
                <div class="form-control my-3">
                    <label for="reported_at">Completed At</label>
                    <input type="date" class="input input-bordered w-full" id="completed_at" name="completed_at" />
                </div>
                <div class="form-control my-3">
                    <label for="reported_at">Description</label>
                    <textarea type="date" class="textarea textarea-bordered w-full" id="description" name="description"></textarea>
                </div>
                <div class="modal-action">
                    <label for="form_modal" class="btn">Cancel</label>
                    <button type="submit" class="btn btn-primary text-white">Submit Data</button>
                </div>
            </form>
        </div>
    </div>

    <input type="checkbox" id="delete_modal" class="modal-toggle" />
    <div class="modal" role="dialog">
        <div class="modal-box">
            <h3 class="font-bold text-lg">Delete Machine ?</h3>
            <p class="text-sm">The mahchine <a href="c:\users\admin\documents\projects\panasonic_machine_checker\controllers\admincontroller.cs">c:\users\admin\documents\projects\panasonic_machine_checker\controllers\admincontroller.cs</a>data will be deleted permanently</p>
            <div class="modal-action">
                <label for="delete_modal" class="btn">Cancel</label>
                <button id="deleteBtn" class="btn btn-error text-white">Delete</button>
            </div>
        </div>
    </div>

    <div>
        <div class="flex items-center justify-between w-full mb-3">
            <h1 class="font-semibold">Cases <span class="badge badge-primary">@Model.TotalItems</span></h1>
            <div>
                <label for="form_modal" id="btnAdd" class="btn btn-sm btn-primary">Add new</label>
                <select class="select w-24 select-sm select-bordered" id="sort-filter">
                    <option disabled selected>Select Order</option>
                    <option value="newest">Terbaru (Newest)</option>
                    <option value="oldest">Terlama (Oldest)</option>
                </select>
            </div>
        </div>
        <div class="overflow-x-auto">
            <table class="table table-sm" id="machinesTable">
                <thead>
                    <tr>
                        <th></th>
                        <th>Machine</th>
                        <th>Reported By</th>
                        <th>Reported At</th>
                        <th>Completed At</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.CasesList.Count > 0)
                    {
                        int counter = 1;
                        foreach (var item in Model.CasesList)
                        {
                            <tr id="item-@item.Id">
                                <th class="case_counter">@counter</th>
                                <td class="hidden case_machine_id">@item.MachineId</td>
                                <td class="case_machine">@item.Machine.Name</td>
                                <td class="hidden case_reported_by_id">@item.ReportedById</td>
                                <td class="case_reported_by">@item.ReportedByNavigation.Name</td>
                                <td class="case_date_reported">@item.DateReported</td>
                                <td class="case_date_completed">@item.DateCompleted</td>
                                <td class="hidden case_status_id">@item.StatusId</td>
                                <td class="hidden case_description">@item.Description</td>
                                <td class="case_status">@item.Status.Name</td>
                                <td>
                                    <label for="form_modal" data-itemid="@item.Id" class="btn btnEdit btn-primary btn-sm">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="m11.4 18.161l7.396-7.396a10.289 10.289 0 0 1-3.326-2.234a10.29 10.29 0 0 1-2.235-3.327L5.839 12.6c-.577.577-.866.866-1.114 1.184a6.556 6.556 0 0 0-.749 1.211c-.173.364-.302.752-.56 1.526l-1.362 4.083a1.06 1.06 0 0 0 1.342 1.342l4.083-1.362c.775-.258 1.162-.387 1.526-.56c.43-.205.836-.456 1.211-.749c.318-.248.607-.537 1.184-1.114m9.448-9.448a3.932 3.932 0 0 0-5.561-5.561l-.887.887l.038.111a8.754 8.754 0 0 0 2.092 3.32a8.754 8.754 0 0 0 3.431 2.13z" /></svg>
                                    </label>
                                    <label for="delete_modal" data-itemid="@item.Id" class="btn btnDelete btn-error btn-sm">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z" /></svg>
                                    </label>
                                </td>
                            </tr>
                            counter++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">
                                <div class="w-full bg-error text-white p-3 rounded-xl text-center">
                                    Cases Not Found
                                </div>
                            </td>
                        </tr>
                    }
                <tfoot>
                    <tr>
                        <th></th>
                        <th>Machine</th>
                        <th>Reported By</th>
                        <th>Reported At</th>
                        <th>Completed At</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="w-full flex mt-10 justify-end">
            <div class="join">
                <button class="btn join-item" onclick="location.href='@Url.Action("Cases", new { page = Model.CurrentPage - 1 })'" @(Model.CurrentPage == 1 ? "disabled" : "")><</button>
                @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
                {
                    <button class="btn join-item @(Model.CurrentPage == i ? "btn-primary" : "")" onclick="location.href='@Url.Action("Machines", new { page = i })'">@i</button>
                }
                <button class="btn join-item" onclick="location.href='@Url.Action("Cases", new { page = Model.CurrentPage + 1 })'" @(Model.CurrentPage * Model.PageSize >= Model.TotalItems ? "disabled" : "")>></button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let data = null
            function updateMachine() {
                let machine_id = parseInt(document.getElementById('machine_id').value);
                let reported_by = parseInt(document.getElementById('reported_by').value);
                let status_id = parseInt(document.getElementById('status').value);
                let date_reported = document.getElementById('reported_at').value;
                let date_completed = document.getElementById('completed_at').value;
                let description = document.getElementById('description').value;
                let case_data = {
                    Description: description,
                    MachineId: machine_id,
                    ReportedById: reported_by,
                    StatusId: status_id,
                    DateReported: date_reported,
                    DateCompleted: date_completed,
                }
                if(data != null) case_data.Id = data
                let url = data != null ? '/Admin/UpdateCase/'+data : '/Admin/CreateCase';

                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(case_data)
                })
                    .then((response) => response.json())
                    .then((data) => {
                        alert('Case Saved');
                        document.getElementById('form_modal').click()
                        setTimeout(() => {
                            window.location.reload()
                        }, 300)
                    })
            }

            document.getElementById('sort-filter').addEventListener('change', (event) => {
                window.location.href = '?page=1&sortOrder='+event.target.value;
            })

            document.getElementById('btnAdd').addEventListener('click', (event) => {
                data = null
                document.getElementById('machine_id').value = ''
                document.getElementById('reported_by').value = ''
                document.getElementById('status').value = ''
                document.getElementById('reported_at').value = ''
                document.getElementById('completed_at').value = ''
                document.getElementById('description').value = ''
            })
            Array.from(document.getElementsByClassName('btnEdit')).map((element, index) => {
                element.addEventListener('click', (event) => {
                    data = event.target.getAttribute('data-itemid')
                    let itemData = document.getElementById('item-' + data)
                    const reportedAt = new Date(itemData.querySelector('.case_date_reported').innerHTML);
                    const completedAt = new Date(itemData.querySelector('.case_date_completed').innerHTML);
                    document.getElementById('machine_id').value = Array.from(itemData.getElementsByClassName('case_machine_id'))[0].innerHTML
                    document.getElementById('reported_by').value = Array.from(itemData.getElementsByClassName('case_reported_by_id'))[0].innerHTML
                    document.getElementById('status').value = Array.from(itemData.getElementsByClassName('case_status_id'))[0].innerHTML
                    document.getElementById('reported_at').value = reportedAt.toISOString().split('T')[0]
                    document.getElementById('completed_at').value = completedAt.toISOString().split('T')[0];
                    document.getElementById('description').value = Array.from(itemData.getElementsByClassName('case_description'))[0].innerHTML
                })
            })
            Array.from(document.getElementsByClassName('btnDelete')).map((element, index) => {
                element.addEventListener('click', (event) => {
                    data = event.target.getAttribute('data-itemid')
                })
            })

            function deleteMachine() {
                fetch('/Admin/DeleteCase/' + data, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: data })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Case deleted');
                            document.getElementById('delete_modal').click()
                            setTimeout(() => {
                                window.location.reload()
                            }, 300)
                        } else {
                            alert('Error deleting case');
                        }
                    });
            }

            document.getElementById('formData').addEventListener('submit', (event) => {
                event.preventDefault()
                updateMachine()
            });
            document.getElementById('deleteBtn').addEventListener('click', function () {
                deleteMachine();
            });
        })
    </script>
}